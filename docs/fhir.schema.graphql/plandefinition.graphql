# FHIR GraphQL Schema. Version 4.6.0

# import * from 'types.graphql'

type PlanDefinition {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  subtitle: String  _subtitle: ElementBase
  type: CodeableConcept
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  subjectCodeableConcept: CodeableConcept
  subjectReference: Reference
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  usage: String  _usage: ElementBase
  copyright: markdown  _copyright: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  effectivePeriod: Period
  topic: [CodeableConcept]
  author: [ContactDetail]
  editor: [ContactDetail]
  reviewer: [ContactDetail]
  endorser: [ContactDetail]
  relatedArtifact: [RelatedArtifact]
  library: canonical  _library: [ElementBase]
  goal: [PlanDefinitionGoal]
  actor: [PlanDefinitionActor]
  action: [PlanDefinitionAction]
}

type PlanDefinitionGoal {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  category: CodeableConcept
  description: CodeableConcept!
  priority: CodeableConcept
  start: CodeableConcept
  addresses: [CodeableConcept]
  documentation: [RelatedArtifact]
  target: [PlanDefinitionGoalTarget]
}

type PlanDefinitionGoalTarget {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  measure: CodeableConcept
  detailQuantity: Quantity
  detailRange: Range
  detailCodeableConcept: CodeableConcept
  detailString: String  _detailString: ElementBase
  detailBoolean: Boolean  _detailBoolean: ElementBase
  detailInteger: Int  _detailInteger: ElementBase
  detailRatio: Ratio
  due: Duration
}

type PlanDefinitionActor {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  title: String  _title: ElementBase
  description: markdown  _description: ElementBase
  option: [PlanDefinitionActorOption]!
}

type PlanDefinitionActorOption {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  typeReference: Reference
  role: CodeableConcept
}

type PlanDefinitionAction {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  linkId: String  _linkId: ElementBase
  prefix: String  _prefix: ElementBase
  title: String  _title: ElementBase
  description: String  _description: ElementBase
  textEquivalent: String  _textEquivalent: ElementBase
  priority: code  _priority: ElementBase
  code: CodeableConcept
  reason: [CodeableConcept]
  documentation: [RelatedArtifact]
  goalId: ID  _goalId: [ElementBase]
  subjectCodeableConcept: CodeableConcept
  subjectReference: Reference
  trigger: [TriggerDefinition]
  condition: [PlanDefinitionActionCondition]
  input: [PlanDefinitionActionInput]
  output: [PlanDefinitionActionOutput]
  relatedAction: [PlanDefinitionActionRelatedAction]
  timingAge: Age
  timingDuration: Duration
  timingRange: Range
  timingTiming: Timing
  location: CodeableReference
  participant: [PlanDefinitionActionParticipant]
  type: CodeableConcept
  groupingBehavior: code  _groupingBehavior: ElementBase
  selectionBehavior: code  _selectionBehavior: ElementBase
  requiredBehavior: code  _requiredBehavior: ElementBase
  precheckBehavior: code  _precheckBehavior: ElementBase
  cardinalityBehavior: code  _cardinalityBehavior: ElementBase
  definitionCanonical: canonical  _definitionCanonical: ElementBase
  definitionUri: uri  _definitionUri: ElementBase
  transform: canonical  _transform: ElementBase
  dynamicValue: [PlanDefinitionActionDynamicValue]
  action: [PlanDefinitionAction]
}

type PlanDefinitionActionCondition {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  kind: code  _kind: ElementBase
  expression: Expression
}

type PlanDefinitionActionInput {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  title: String  _title: ElementBase
  requirement: DataRequirement
  relatedData: ID  _relatedData: ElementBase
}

type PlanDefinitionActionOutput {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  title: String  _title: ElementBase
  requirement: DataRequirement
  relatedData: String  _relatedData: ElementBase
}

type PlanDefinitionActionRelatedAction {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  targetId: ID  _targetId: ElementBase
  relationship: code  _relationship: ElementBase
  offsetDuration: Duration
  offsetRange: Range
}

type PlanDefinitionActionParticipant {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  actorId: String  _actorId: ElementBase
  type: code  _type: ElementBase
  typeReference: Reference
  role: CodeableConcept
  function: CodeableConcept
}

type PlanDefinitionActionDynamicValue {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  path: String  _path: ElementBase
  expression: Expression
}

input PlanDefinitionInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  url: uri  _url: ElementBaseInput
  identifier: [IdentifierInput]
  version: String  _version: ElementBaseInput
  name: String  _name: ElementBaseInput
  title: String  _title: ElementBaseInput
  subtitle: String  _subtitle: ElementBaseInput
  type: CodeableConceptInput
  status: code  _status: ElementBaseInput
  experimental: Boolean  _experimental: ElementBaseInput
  subjectCodeableConcept: CodeableConceptInput
  subjectReference: ReferenceInput
  date: dateTime  _date: ElementBaseInput
  publisher: String  _publisher: ElementBaseInput
  contact: [ContactDetailInput]
  description: markdown  _description: ElementBaseInput
  useContext: [UsageContextInput]
  jurisdiction: [CodeableConceptInput]
  purpose: markdown  _purpose: ElementBaseInput
  usage: String  _usage: ElementBaseInput
  copyright: markdown  _copyright: ElementBaseInput
  approvalDate: date  _approvalDate: ElementBaseInput
  lastReviewDate: date  _lastReviewDate: ElementBaseInput
  effectivePeriod: PeriodInput
  topic: [CodeableConceptInput]
  author: [ContactDetailInput]
  editor: [ContactDetailInput]
  reviewer: [ContactDetailInput]
  endorser: [ContactDetailInput]
  relatedArtifact: [RelatedArtifactInput]
  library: canonical  _library: [ElementBaseInput]
  goal: [PlanDefinitionGoalInput]
  actor: [PlanDefinitionActorInput]
  action: [PlanDefinitionActionInput]
}

input PlanDefinitionGoalInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  category: CodeableConceptInput
  description: CodeableConceptInput!
  priority: CodeableConceptInput
  start: CodeableConceptInput
  addresses: [CodeableConceptInput]
  documentation: [RelatedArtifactInput]
  target: [PlanDefinitionGoalTargetInput]
}

input PlanDefinitionGoalTargetInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  measure: CodeableConceptInput
  detailQuantity: QuantityInput
  detailRange: RangeInput
  detailCodeableConcept: CodeableConceptInput
  detailString: String  _detailString: ElementBaseInput
  detailBoolean: Boolean  _detailBoolean: ElementBaseInput
  detailInteger: Int  _detailInteger: ElementBaseInput
  detailRatio: RatioInput
  due: DurationInput
}

input PlanDefinitionActorInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  title: String  _title: ElementBaseInput
  description: markdown  _description: ElementBaseInput
  option: [PlanDefinitionActorOptionInput]!
}

input PlanDefinitionActorOptionInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: code  _type: ElementBaseInput
  typeReference: ReferenceInput
  role: CodeableConceptInput
}

input PlanDefinitionActionInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  linkId: String  _linkId: ElementBaseInput
  prefix: String  _prefix: ElementBaseInput
  title: String  _title: ElementBaseInput
  description: String  _description: ElementBaseInput
  textEquivalent: String  _textEquivalent: ElementBaseInput
  priority: code  _priority: ElementBaseInput
  code: CodeableConceptInput
  reason: [CodeableConceptInput]
  documentation: [RelatedArtifactInput]
  goalId: ID  _goalId: [ElementBaseInput]
  subjectCodeableConcept: CodeableConceptInput
  subjectReference: ReferenceInput
  trigger: [TriggerDefinitionInput]
  condition: [PlanDefinitionActionConditionInput]
  input: [PlanDefinitionActionInputInput]
  output: [PlanDefinitionActionOutputInput]
  relatedAction: [PlanDefinitionActionRelatedActionInput]
  timingAge: AgeInput
  timingDuration: DurationInput
  timingRange: RangeInput
  timingTiming: TimingInput
  location: CodeableReferenceInput
  participant: [PlanDefinitionActionParticipantInput]
  type: CodeableConceptInput
  groupingBehavior: code  _groupingBehavior: ElementBaseInput
  selectionBehavior: code  _selectionBehavior: ElementBaseInput
  requiredBehavior: code  _requiredBehavior: ElementBaseInput
  precheckBehavior: code  _precheckBehavior: ElementBaseInput
  cardinalityBehavior: code  _cardinalityBehavior: ElementBaseInput
  definitionCanonical: canonical  _definitionCanonical: ElementBaseInput
  definitionUri: uri  _definitionUri: ElementBaseInput
  transform: canonical  _transform: ElementBaseInput
  dynamicValue: [PlanDefinitionActionDynamicValueInput]
  action: [PlanDefinitionAction]
}

input PlanDefinitionActionConditionInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  kind: code  _kind: ElementBaseInput
  expression: ExpressionInput
}

input PlanDefinitionActionInputInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  title: String  _title: ElementBaseInput
  requirement: DataRequirementInput
  relatedData: ID  _relatedData: ElementBaseInput
}

input PlanDefinitionActionOutputInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  title: String  _title: ElementBaseInput
  requirement: DataRequirementInput
  relatedData: String  _relatedData: ElementBaseInput
}

input PlanDefinitionActionRelatedActionInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  targetId: ID  _targetId: ElementBaseInput
  relationship: code  _relationship: ElementBaseInput
  offsetDuration: DurationInput
  offsetRange: RangeInput
}

input PlanDefinitionActionParticipantInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  actorId: String  _actorId: ElementBaseInput
  type: code  _type: ElementBaseInput
  typeReference: ReferenceInput
  role: CodeableConceptInput
  function: CodeableConceptInput
}

input PlanDefinitionActionDynamicValueInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  path: String  _path: ElementBaseInput
  expression: ExpressionInput
}

type PlanDefinitionReadType {
  PlanDefinition(id: ID!): PlanDefinition
}

type PlanDefinitionListType {
  PlanDefinitionList(_filter: String
    composed_of: [reference]
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    definition: [reference]
    depends_on: [reference]
    derived_from: [reference]
    description: [String]
    effective: [date]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    predecessor: [reference]
    publisher: [String]
    status: [token]
    successor: [reference]
    title: [String]
    topic: [token]
    type: [token]
    url: [uri]
    version: [token]
    composed_of: [reference]
    depends_on: [reference]
    derived_from: [reference]
    effective: [date]
    predecessor: [reference]
    successor: [reference]
    topic: [token]
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _id: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): [PlanDefinition]
}

type PlanDefinitionConnectionType {
  PlanDefinitionConection(_filter: String
    composed_of: [reference]
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    definition: [reference]
    depends_on: [reference]
    derived_from: [reference]
    description: [String]
    effective: [date]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    predecessor: [reference]
    publisher: [String]
    status: [token]
    successor: [reference]
    title: [String]
    topic: [token]
    type: [token]
    url: [uri]
    version: [token]
    composed_of: [reference]
    depends_on: [reference]
    derived_from: [reference]
    effective: [date]
    predecessor: [reference]
    successor: [reference]
    topic: [token]
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _id: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): PlanDefinitionConnection
}

type PlanDefinitionConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [PlanDefinitionEdge]
}

type PlanDefinitionEdge {
  mode: String
  score: Float
  resource: PlanDefinition
}

type PlanDefinitionCreateType {
  PlanDefinitionCreate(resource: PlanDefinitionInput): PlanDefinitionCreation
}

type PlanDefinitionCreation {
  location: String
  resource: PlanDefinition
  information: OperationOutcome
}

type PlanDefinitionUpdateType {
  PlanDefinitionUpdate(id: ID, resource: PlanDefinitionInput): PlanDefinitionUpdate
}

type PlanDefinitionUpdate {
  resource: PlanDefinition
  information: OperationOutcome
}

type PlanDefinitionDeleteType {
  PlanDefinitionDelete(id: ID): PlanDefinitionDelete
}

type PlanDefinitionDelete {
  information: OperationOutcome
}

